;Replace all ";CS#-" -> ";CS#\r\n" to make the file for CS#

#include "RaScan_CS_def.pmc"
#include "RaScan_Interface_def.pmc"

;CS4
#define CSNumber 4
;CS5-#define CSNumber 5
;CS6-#define CSNumber 6
;CS4
#define RefPLC	PLC19
;CS5-#define RefPLC	PLC20
;CS6-#define RefPLC	PLC21

;CS4
#define csGearTX 1
;CS5-#define csGearTX 1

 
END Gat 
DEL Gat 
DEL ROT
I5 = 0 ; Disable ALL PLCs
CLOSE &CSNumber ; Address and close C.S. 
&CSNumber
;----------------------------------------
OPEN FORWARD
CLEAR
	;! check for div by 0
	
;CS4-	XPosCUsr = (m1PosCUsr - m1X0Usr)
;CS4e
XPosCUsr = (m1PosCUsr - m1X0Usr)*pCos - (m2PosCUsr - m2X0Usr)*pSin

;CS4-	XVelCUsr = (m1VelCRaw*m1MRES)
;CS4e
XVelCUsr = (m1VelCRaw*m1MRES)*pCos - (m2VelCRaw*m2MRES)*pSin

;CS5-	XPosCUsr = (m1PosCUsr - m1X0Usr)*pCos - (m3PosCUsr - m3X0Usr)*pSin
;CS5-	XVelCUsr = (m1VelCRaw*m1MRES)*pCos - (m3VelCRaw*m3MRES)*pSin

;fixit	YPosCUsr = m2PosCUsr - m2X0Usr
;fixit	YVelCUsr = m2VelCRaw*m2MRES

;CS4e
YPosCUsr = (m1PosCUsr - m1X0Usr)*pSin + (m2PosCUsr - m2X0Usr)*pCos
;CS4e
YVelCUsr = (m1VelCRaw*m1MRES)*pSin + (m2VelCRaw*m2MRES)*pCos

;CS5-	ZPosCUsr = (m1PosCUsr - m1X0Usr)*pSin + (m3PosCUsr - m3X0Usr)*pCos
;CS5-	ZVelCUsr = (m1VelCRaw*m1MRES)*pSin + (m3VelCRaw*m3MRES)*pCos
;CS6-	XPosCUsr = (m4PosCUsr - m4X0Usr)
;CS6-	XVelCUsr = m4VelCRaw*m4MRES

CLOSE

OPEN INVERSE
CLEAR
	; calculate in EGUs
	
;CS4-	m1PinvUsr = m1X0Usr + XPosCUsr
;CS4e
	m1PinvUsr = m1X0Usr + XPosCUsr*pCos + YPosCUsr*pSin
;CS5-	m1PinvUsr = m1X0Usr + XPosCUsr*pCos + ZPosCUsr*pSin
;CS6-	m1PinvUsr = XPosCUsr

;;fixit	m2PinvUsr = m2X0Usr + YPosCUsr

;CS4e
	m2PinvUsr = m2X0Usr - XPosCUsr*pSin + YPosCUsr*pCos
;CS5-	m3PinvUsr = m3X0Usr - XPosCUsr*pSin + ZPosCUsr*pCos
;CS6-	m4PinvUsr = XPosCUsr

;CS4-	m1PosCRaw = (m1PinvUsr - m1PoffUsr)/m1MRES
;CS4e
	m1PosCRaw = (m1PinvUsr - m1PoffUsr)/m1MRES
;CS5-	m1PosCRaw = (m1PinvUsr - m1PoffUsr)/m1MRES
;CS6-	m1PosCRaw = (m1PinvUsr)/m1MRES/csGearTX

m2PosCRaw = (m2PinvUsr - m2PoffUsr)/m2MRES

;CS5-	m3PosCRaw = (m3PinvUsr - m3PoffUsr)/m3MRES
;CS6-	m4PosCRaw = (m4PinvUsr - m4PoffUsr)/m4MRES


;CS4-	m1VelCRaw = (XVelCUsr)/m1MRES
;CS4e
m1VelCRaw = (XVelCUsr*pCos + YVelCUsr*pSin)/m1MRES
;CS5-	m1VelCRaw = (XVelCUsr*pCos + ZVelCUsr*pSin)/m1MRES
;CS6-	m1VelCRaw = XVelCUsr/m1MRES/csGearTX

;Fixit m2VelCRaw = YVelCUsr/m2MRES

;CS4e
m2VelCRaw = (-XVelCUsr*pSin + YVelCUsr*pCos)/m2MRES

;CS5-	m3VelCRaw = (-XVelCUsr*pSin + ZVelCUsr*pCos)/m3MRES
;CS6-	m4VelCRaw = XVelCUsr/m4MRES

CLOSE

; A PLC(sx+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)

Disable RefPLC
OPEN RefPLC
CLEAR
	csStatus = M(5080+csActive*100) ; Program running bit
	ADDRESS &CSNumber
;CS4e
pSin=sin(csAngleXY)
;CS5-	pSin=sin(csAngleXZ)
;CS4e
pCos=cos(csAngleXY)
;CS5-	pCos=cos(csAngleXZ)

	;consider using PMATCH instead
;CS4-	XrbvUsr = (m1PrbvUsr - m1X0Usr)
;CS4e
XrbvUsr = (m1PrbvUsr - m1X0Usr)*pCos - (m2PrbvUsr - m2X0Usr)*pSin
;CS5-	XrbvUsr = (m1PrbvUsr - m1X0Usr)*pCos - (m3PrbvUsr - m3X0Usr)*pSin
;CS6-	XrbvUsr = (m4PrbvUsr - m4X0Usr)

;Fixit	YrbvUsr = m2PrbvUsr

;CS4e
YrbvUsr = (m1PrbvUsr - m1X0Usr)*pSin + (m2PrbvUsr - m2X0Usr)*pCos

;CS5-	ZrbvUsr = (m1PrbvUsr - m1X0Usr)*pSin + (m3PrbvUsr - m3X0Usr)*pCos
;CS6
	;PMATCH
	
	if (XrbvUsr + ax1OffUsr > ax1HLMUsr )
		CMD"K"
	endif
	if (XrbvUsr + ax1OffUsr < ax1LLMUsr )
		CMD"K"
	endif
	if (YrbvUsr + ax2OffUsr > ax2HLMUsr )
		CMD"K"
	endif	
	if (YrbvUsr + ax2OffUsr < ax2LLMUsr )
		CMD"K"
	endif
;CS5-	if (ZrbvUsr + ax3OffUsr > ax3HLMUsr )
;CS5-		CMD"K"
;CS5-	endif	
;CS5-	if (ZrbvUsr + ax3OffUsr < ax3LLMUsr )
;CS5-		CMD"K"
;CS5-	endif

	if (csActive=CSNumber)
		if (M(5004+CSNumber*100)=0) 
			CMD"UNDEF ALL"
			;deactevate CS nos 4,5,6
			i(5050+4*100)=0
			i(5050+5*100)=0
			i(5050+6*100)=0

			CMD"#1->I #2->I"
			;CS5-		CMD"#3->I"
			;CS6-		CMD"#4->I"
			;activate CS
			i(5050+CSNumber*100)=1
		endif

		if (m1MOVE = 1)
		or (m2MOVE = 1)
	;CS5-	or (m3MOVE = 1)
	;CS6-	or (m4MOVE = 1)
			m1MOVE = 0
			m2MOVE = 0
	;CS5-		m3MOVE = 0
	;CS6-		m4MOVE = 0
			
			Q77 = XrbvUsr ; X
			Q78 = YrbvUsr ; Y
	;CS5-		Q79 = ZrbvUsr ; Z
			endif
			
	endif ;(csActive=CSNumber)
	
CLOSE
enable RefPLC
CLOSE CSNumber ; Address C.S. 
;----------------------------------------------
I15 =  0  ;Deg (not Rad) Control for User Trig. Functions
;
i(5050+CSNumber*100)=1
i(5013+CSNumber*100)=10
;
I5 = 2 ; Enable Background PLCs
csActive=CSNumber
